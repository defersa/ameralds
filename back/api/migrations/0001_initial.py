# Generated by Django 3.1.7 on 2023-03-29 20:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='Имя категории en')),
                ('name_ru', models.CharField(blank=True, max_length=200, verbose_name='Имя категории ru')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создании категории')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Исходное название файла')),
                ('index', models.IntegerField(blank=True, default=0, verbose_name='Номер в очереди')),
                ('image_full', models.ImageField(blank=True, upload_to='static/images_model/full')),
                ('image_small', models.ImageField(blank=True, upload_to='static/images_model/small')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания картинки')),
            ],
            options={
                'ordering': ['index', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Jewelry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя украшения')),
                ('description', models.CharField(max_length=1000, verbose_name='Описание украшения')),
                ('stock', models.IntegerField(verbose_name='Количество в наличии')),
                ('complexity', models.IntegerField(verbose_name='Количество дней на новую исполнение новой товарной единицы')),
                ('price_ru', models.FloatField(verbose_name='Цена для СНГ')),
                ('price_en', models.FloatField(verbose_name='Цена для мира')),
                ('views', models.IntegerField(default=0, verbose_name='Количество показов')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания позиции')),
                ('category', models.ManyToManyField(blank=True, related_name='jewelry', to='api.Category')),
                ('images', models.ManyToManyField(blank=True, related_name='jewelry', to='api.Image', verbose_name='Изображения')),
            ],
        ),
        migrations.CreateModel(
            name='LangCharFieldShort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en', models.CharField(blank=True, default='', max_length=200, verbose_name='En')),
                ('ru', models.CharField(blank=True, default='', max_length=200, verbose_name='Ru')),
            ],
        ),
        migrations.CreateModel(
            name='LangIntegerField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en', models.IntegerField(blank=True, default=0, verbose_name='En')),
                ('ru', models.IntegerField(blank=True, default=0, verbose_name='Ru')),
            ],
        ),
        migrations.CreateModel(
            name='Pattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=1000, verbose_name='Описание схемы')),
                ('hidden', models.BooleanField(verbose_name='Скрытый')),
                ('views', models.IntegerField(default=0, verbose_name='Количество показов')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания позиции')),
                ('category', models.ManyToManyField(blank=True, related_name='pattern', to='api.Category')),
            ],
        ),
        migrations.CreateModel(
            name='PrivateFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название файла')),
                ('file', models.FileField(blank=True, upload_to='files/pattern')),
            ],
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('secretCode', models.CharField(max_length=50)),
                ('coints_ru', models.FloatField()),
                ('coints_en', models.FloatField()),
                ('deactivate_date', models.DateTimeField(verbose_name='Дата создания позиции')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(default=0)),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания размера')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verify', models.BooleanField(default=False, verbose_name='Потвержденный аккаунт')),
                ('bonus_coints_ru', models.FloatField(default=0)),
                ('bonus_coints_en', models.FloatField(default=0)),
                ('location', models.CharField(max_length=2)),
                ('patterns', models.ManyToManyField(blank=True, to='api.Pattern')),
                ('token_verify', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_verify', to='api.token')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatternSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cbb', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cbb', to='api.privatefile')),
                ('jbb', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jbb', to='api.privatefile')),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='api.pattern')),
                ('pdf', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pdf', to='api.privatefile')),
                ('png', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='png', to='api.privatefile')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.size')),
            ],
        ),
        migrations.CreateModel(
            name='PatternRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, verbose_name='Оценка')),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='api.pattern')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patternRating', to='api.person')),
            ],
        ),
        migrations.AddField(
            model_name='pattern',
            name='colors',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='api.privatefile', verbose_name='Цветовой подбор'),
        ),
        migrations.AddField(
            model_name='pattern',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='pattern', to='api.Image', verbose_name='Изображения'),
        ),
        migrations.AddField(
            model_name='pattern',
            name='name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.langcharfieldshort'),
        ),
        migrations.AddField(
            model_name='pattern',
            name='price',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.langintegerfield'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField()),
                ('track_number', models.CharField(blank=True, max_length=200, verbose_name='Трек отслеживания')),
                ('next_status_date', models.DateTimeField(blank=True, verbose_name='Примерное время измения статуса')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания заказа')),
                ('jewels', models.ManyToManyField(blank=True, to='api.Jewelry')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.person')),
                ('patterns', models.ManyToManyField(blank=True, to='api.Pattern')),
            ],
        ),
        migrations.CreateModel(
            name='JewelryRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, verbose_name='Оценка')),
                ('jewelry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='api.jewelry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jewelryRating', to='api.person')),
            ],
        ),
        migrations.AddField(
            model_name='jewelry',
            name='price',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.langintegerfield'),
        ),
        migrations.AddField(
            model_name='category',
            name='name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.langcharfieldshort'),
        ),
    ]
